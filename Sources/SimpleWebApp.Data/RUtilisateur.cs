//------------------------------------------------------------------------------
// <auto-generated>
//    (c)Netapsys 2012
//    Ce code a ete genere par template T4.
//    Ne pas le modifier manuellement !
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using SimpleWebApp.Common;
using System.Runtime.Serialization;
using System.Xml.Linq;
using System.Linq;
using System.Data.Entity;
using log4net;


namespace SimpleWebApp.Data
{
    public partial class RUtilisateur : ARepository<Utilisateur,int> , IRepository<Utilisateur>
    {
    
    
    	#region Constructor(s)
    
    	public RUtilisateur(SimpleWebAppEntities context) : base(context){}
    
    	#endregion
    
        #region Overrided Methods
    
        public override Utilisateur GetById(int id)
        {
            return Single(id);
        }
    
        #endregion
    
    	#region Mapping
    
    	protected override void Map(Utilisateur source, Utilisateur target){
    		if(!Object.Equals(source.Login,target.Login)){
    			target.Login = source.Login;
    		}        
    		if(!Object.Equals(source.PassswordHash,target.PassswordHash)){
    			target.PassswordHash = source.PassswordHash;
    		}        
    		if(!Object.Equals(source.Nom,target.Nom)){
    			target.Nom = source.Nom;
    		}        
    		if(!Object.Equals(source.Email,target.Email)){
    			target.Email = source.Email;
    		}        
    		if(!Object.Equals(source.EmailConfirmed,target.EmailConfirmed)){
    			target.EmailConfirmed = source.EmailConfirmed;
    		}        
    	}
    
    	#endregion
    
    	#region Methods
    
    	public override Utilisateur InsertOrUpdate(Utilisateur entityToAdd)
    	{
    		AttachRelatedEntities(entityToAdd);
    		base.InsertOrUpdate(entityToAdd);
    		return entityToAdd;
    	}
    
    	private void AttachRelatedEntities(Utilisateur entity)
    	{
    		}
    
    	#endregion
    }
    }
