//------------------------------------------------------------------------------
// <auto-generated>
//    (c)Netapsys 2012
//    Ce code a ete genere par template T4.
//    Ne pas le modifier manuellement !
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using SimpleWebApp.Common;
using System.Runtime.Serialization;
using System.Xml.Linq;
using System.Linq;
using System.Data.Entity;
using log4net;


namespace SimpleWebApp.Data
{
    public partial class RTokenEntity : ARepository<TokenEntity,int> , IRepository<TokenEntity>
    {
    
    
    	#region Constructor(s)
    
    	public RTokenEntity(SimpleWebAppEntities context) : base(context){}
    
    	#endregion
    
        #region Overrided Methods
    
        public override TokenEntity GetById(int id)
        {
            return Single(id);
        }
    
        #endregion
    
    	#region Mapping
    
    	protected override void Map(TokenEntity source, TokenEntity target){
    		if(!Object.Equals(source.UtilisateurId,target.UtilisateurId)){
    			target.UtilisateurId = source.UtilisateurId;
    		}        
    		if(!Object.Equals(source.AuthToken,target.AuthToken)){
    			target.AuthToken = source.AuthToken;
    		}        
    		if(!Object.Equals(source.DateCreation,target.DateCreation)){
    			target.DateCreation = source.DateCreation;
    		}        
    		if(!Object.Equals(source.DateExpiration,target.DateExpiration)){
    			target.DateExpiration = source.DateExpiration;
    		}        
    		if(null!=source.Utilisateur&&!Object.Equals(source.Utilisateur,target.Utilisateur)){
    			//target.Utilisateur = source.Utilisateur;
    			Context.Set<Utilisateur>().Find(source.Utilisateur.Id);
    		}     
    	}
    
    	#endregion
    
    	#region Methods
    
    	public override TokenEntity InsertOrUpdate(TokenEntity entityToAdd)
    	{
    		AttachRelatedEntities(entityToAdd);
    		base.InsertOrUpdate(entityToAdd);
    		return entityToAdd;
    	}
    
    	private void AttachRelatedEntities(TokenEntity entity)
    	{
    			if (entity != null && entity.Utilisateur != null)
    		{
    			entity.Utilisateur = Context.Set<Utilisateur>().Find(entity.Utilisateur.Id);
    		}
    	}
    
    	#endregion
    }
    }
